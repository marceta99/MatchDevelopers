.slider-container {
  height: 600px;
  position: relative;
  transform: scale(0.8);
  transform: translateX(370px);
}

.slider {
  width: 700px;
  border-radius: 20px;
}
.slider-scrollable {
  display: flex;
  flex-direction: column;
  width: 100%;
  overflow-y: scroll;
  overflow-x: hidden;
  scrollbar-width: 0px;
  border-radius: 20px;
  max-height: 600px;
  .slider-slika {
    width: 100%;
  }
  .slider-ime,
  .slider-info,
  .slider-tech {
    width: 400px;
    // border: 2px solid red;
    height: 10%;
    display: flex;
    flex-direction: row;
    align-items: flex-start;
    padding: 10px;
    padding-bottom: 5px;
  }
  .slider-tech {
    flex-direction: column;
    max-height: 200px;
    padding: 20px;

    .tech-lista {
      display: flex;
      flex-wrap: wrap;
    }
    .tech-lista-item {
      border: 2px solid rgb(120, 120, 120);
      border-radius: 12px;

      padding: 6px;
      margin-right: 6px;
      margin-top: 6px;
    }
  }
  .linkovi-container {
    padding: 15px;
    .connect-text {
      font-size: 20px;
    }
    .linkovi {
      display: flex;
      flex-direction: row;
      justify-content: flex-start;
      .linkedin,
      .github {
        width: 70px;
        height: 70px;
        margin-right: 30px;
      }
    }
  }
}
.slider-scrollable::-webkit-scrollbar {
  display: none;
}

.tinder-button-image {
  width: 100px;
  height: 50px;
}

.dugmad-slider {
  position: absolute;
  bottom: -80px;
  width: 100%;
  text-align: center;
  display: flex;
  flex-direction: row;
  justify-content: space-around;
  background-color: rgb(120, 120, 120, 0);
  .tinder-dugme {
    width: 70px;
    height: 70px;
  }
  .false {
    width: 50px;
    height: 50px;
    margin-top: 10px;
  }
  main {
  border: 5px solid;
  position: absolute;
  top: 50%;
  transform: translate(0, -50%);
  padding: 10px;
}
}



*{
  box-sizing: border-box;
}
body{
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100vh;
  margin: 0;
  padding: 0;
  background-color: white;
  font-family: 'Knewave', cursive;
}
label{
  width: 100%;
  max-width: 300px;
}
input{
  width: 100%;
  display: flex;
  padding: 10px;
  background-color: white;
  border: 2px solid black;
  color: #111;
  font-size: 10px;
  box-shadow: 3px 1px 0px 2px, 0px -1px 0px 2px rgba(0, 0, 0, 0.62);
  height: 48px;
  transform: skew(-3deg, 1deg);
  font-family: 'Knewave', cursive;
  letter-spacing: 2px;
  text-transform: uppercase;
  &:focus,
  &:valid{
    outline: none;
    ~ ul li{
      @for $i from 1 through 6 {
        &:nth-child(#{$i}){
          &::before{
            filter: blur(20px);
            transform: translate(0, -35px) rotate(-210deg);
          }
          &::after{
            filter: blur(0);
            transform: scale(1) rotate(0);
          }
        }
      }
      @for $i from 1 through 6{
        &:nth-child(#{$i}){
          &::after{
            transition-delay: 200ms + ($i * 200ms);
          }
        }
      }
    }
  }
}
label{
  position: relative;
}
ul{
  position: absolute;
  top: 38px;
  left: -4px;
  margin: 0;
  list-style: none;
  padding-left: 22px;
  position: absolute;
  display: flex;
  pointer-events: none;
  transition: 200ms;
  li{
    letter-spacing: 3px;
    text-transform: uppercase;
    color: transparent;
    pointer-events: none;
    transition: 500ms ease-in-out;
    ::selection{
      color: transparent;
    }
    &::after,
    &::before{
      color: black;
      position: absolute;
      transition: 500ms ease-in-out;
    }
    &::before{
      top: -20px;
    }
    &::after{
      top: -63px;
      transform: scale(0) rotate(210deg);
      filter: blur(20px);
    }
    $chars: s,e,a,r,c,h;
    @each $char in $chars {
      $i: index($chars, $char);
      $x: index($chars, $char);
      $i: $i * 200;
      $y: $x * 12;
      &[#{$char}]::before{
        content: attr($char) quote($char);
        transition-delay: $i+ms;
      }
      &[#{$char}]::after{
        content: attr($char) quote($char);
        left: unquote($y+'px');
        color: #666;
      }
    }
  }
}
